name: Deploy Grafana Stack

on:
  push:
    branches:
      - main
    paths:
      - 'observability-stack/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Get EIP from SSM Parameter Store
        id: get_eip
        run: |
          EIP=$(aws ssm get-parameter --name "/infra/ec2/public_dns" --query "Parameter.Value" --output text)
          echo "EIP=$EIP" >> $GITHUB_OUTPUT
          echo "Fetched EC2 Host from SSM: ${EIP}"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Copy files to EC2
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ steps.get_eip.outputs.EIP }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "observability-stack/**"
          target: "~/"

      - name: SSH into EC2 and deploy
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ steps.get_eip.outputs.EIP }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Ensure Docker Compose v2 is installed
            if ! docker-compose version >/dev/null 2>&1; then
              echo "Docker Compose not found, installing..."
              DOCKER_COMPOSE_VERSION="v2.36.0"
              curl -sSL "https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-linux-aarch64" -o docker-compose
              chmod +x docker-compose
              sudo mv docker-compose /usr/local/bin/docker-compose
              sudo ln -sf /usr/local/bin/docker-compose /usr/bin/docker-compose
              echo "Docker Compose installed."
            else
              echo "Docker Compose already installed."
            fi

            # Deploy the observability stack
            echo "Deploying observability stack..."
            cd ~/observability-stack
            docker-compose down
            docker-compose pull
            docker-compose up -d