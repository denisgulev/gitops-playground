version: '3'

services:
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    env_file:
      - .env
    depends_on:
      - loki
      - tempo
      - mimir
      - prometheus
    environment:
      - GF_SERVER_ROOT_URL=http://localhost:3000/
    networks:
      - observability
    restart: unless-stopped

  loki:
    image: grafana/loki
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - observability
    restart: unless-stopped

  promtail:
    image: grafana/promtail
    container_name: promtail
    volumes:
      - /var/log:/var/log
      - ./promtail-config.yaml:/etc/promtail/promtail.yaml
    command: -config.file=/etc/promtail/promtail.yaml
    depends_on:
      - loki
    networks:
      - observability

  tempo:
    image: grafana/tempo
    container_name: tempo
    ports:
      - "3200:3200" # HTTP API
      - "4317:4317" # OTLP gRPC
      - "4318:4318" # OTLP HTTP
    volumes:
      - ./tempo-config.yaml:/etc/tempo.yaml
    command: [ "--config.file=/etc/tempo.yaml" ]
    networks:
      - observability
    restart: unless-stopped

  mimir:
    image: grafana/mimir
    container_name: mimir
    ports:
      - "9009:9009"
    command: [ "-config.file=/etc/mimir.yaml" ]
    volumes:
      - ./mimir-config.yaml:/etc/mimir.yaml
    networks:
      - observability
    restart: unless-stopped

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - observability
    restart: unless-stopped

volumes:
  grafana-data:


networks:
  observability:
